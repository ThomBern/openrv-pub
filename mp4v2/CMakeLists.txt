#
# Copyright (C) 2022  Autodesk, Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

INCLUDE(cxx_defaults)

SET(_target
    "mp4v2"
)

IF(RV_TARGET_WINDOWS)
  LIST(
    APPEND
    _sources
    libplatform/io/FileSystem_win32.cpp
    libplatform/io/File_win32.cpp
    libplatform/number/random_win32.cpp
    libplatform/platform_win32.cpp
    libplatform/process/process_win32.cpp
    libplatform/time/time_win32.cpp
  )
ELSE()
  LIST(
    APPEND
    _sources
    libplatform/io/FileSystem_posix.cpp
    libplatform/io/File_posix.cpp
    libplatform/number/random_posix.cpp
    libplatform/process/process_posix.cpp
    libplatform/time/time_posix.cpp
  )
ENDIF()

LIST(
  APPEND
  _sources
  libplatform/io/File.cpp
  libplatform/io/FileSystem.cpp
  libplatform/prog/option.cpp
  libplatform/sys/error.cpp
  libplatform/time/time.cpp
  libutil/Database.cpp
  libutil/Timecode.cpp
  libutil/TrackModifier.cpp
  libutil/Utility.cpp
  libutil/crc.cpp
  libutil/other.cpp
  src/3gp.cpp
  src/atom_ac3.cpp
  src/atom_aclr.cpp
  src/atom_amr.cpp
  src/atom_aprg.cpp
  src/atom_ares.cpp
  src/atom_avc1.cpp
  src/atom_avcC.cpp
  src/atom_avdn.cpp
  src/atom_chpl.cpp
  src/atom_colr.cpp
  src/atom_d263.cpp
  src/atom_dac3.cpp
  src/atom_damr.cpp
  src/atom_dref.cpp
  src/atom_elst.cpp
  src/atom_enca.cpp
  src/atom_encv.cpp
  src/atom_free.cpp
  src/atom_ftab.cpp
  src/atom_ftyp.cpp
  src/atom_gmin.cpp
  src/atom_hdlr.cpp
  src/atom_hinf.cpp
  src/atom_hnti.cpp
  src/atom_href.cpp
  src/atom_mdat.cpp
  src/atom_mdhd.cpp
  src/atom_meta.cpp
  src/atom_mp4s.cpp
  src/atom_mp4v.cpp
  src/atom_mvhd.cpp
  src/atom_nmhd.cpp
  src/atom_ohdr.cpp
  src/atom_pasp.cpp
  src/atom_root.cpp
  src/atom_rtp.cpp
  src/atom_s263.cpp
  src/atom_sdp.cpp
  src/atom_sdtp.cpp
  src/atom_smi.cpp
  src/atom_sound.cpp
  src/atom_standard.cpp
  src/atom_stbl.cpp
  src/atom_stdp.cpp
  src/atom_stsc.cpp
  src/atom_stsd.cpp
  src/atom_stsz.cpp
  src/atom_stz2.cpp
  src/atom_text.cpp
  src/atom_tfhd.cpp
  src/atom_tkhd.cpp
  src/atom_tmcd.cpp
  src/atom_tmcdname.cpp
  src/atom_treftype.cpp
  src/atom_trun.cpp
  src/atom_tx3g.cpp
  src/atom_udta.cpp
  src/atom_url.cpp
  src/atom_urn.cpp
  src/atom_uuid.cpp
  src/atom_video.cpp
  src/atom_vmhd.cpp
  src/bmff/typebmff.cpp
  src/cmeta.cpp
  src/descriptors.cpp
  src/exception.cpp
  src/isma.cpp
  src/itmf/CoverArtBox.cpp
  src/itmf/Tags.cpp
  src/itmf/generic.cpp
  src/itmf/type.cpp
  src/log.cpp
  src/mp4.cpp
  src/mp4atom.cpp
  src/mp4container.cpp
  src/mp4descriptor.cpp
  src/mp4file.cpp
  src/mp4file_io.cpp
  src/mp4info.cpp
  src/mp4property.cpp
  src/mp4track.cpp
  src/mp4util.cpp
  src/ocidescriptors.cpp
  src/odcommands.cpp
  src/qosqualifiers.cpp
  src/qtff/ColorParameterBox.cpp
  src/qtff/PictureAspectRatioBox.cpp
  src/qtff/coding.cpp
  src/rtphint.cpp
  src/text.cpp
)

ADD_LIBRARY(
  ${_target} SHARED
  ${_sources}
)
TARGET_INCLUDE_DIRECTORIES(
  ${_target}
  PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}
)
IF(RV_TARGET_WINDOWS)
  TARGET_COMPILE_OPTIONS(
    ${_target}
    PRIVATE "-DMP4V2_EXPORTS" "-D_CRT_SECURE_NO_WARNINGS"
  )
ENDIF()

RV_STAGE(TYPE "SHARED_LIBRARY" TARGET ${_target})
